services:
  db:
    image: mysql:8
    container_name: db
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
    volumes:
      - ./mysql_migrations:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql/
    ports:
      - "1000:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    image: parser-bot
    container_name: bot
    env_file: .env
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: parser-api
    container_name: api
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network 

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"  # Веб-интерфейс через порт 8080
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge